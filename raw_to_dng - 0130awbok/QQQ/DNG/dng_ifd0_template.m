function ifd = dng_ifd0_template(M)

% function ifd = dng_ifd0_template(M)
%
% M.x:
% thumb_width
% thumb_height
% thumbnail_data_offset
% sub_ifd_offsets
% exif_ifd_offset
% CCM1
% CCM2
% orig_name
% date_time
% orig_name
% balance
% version
% make
% model
% copy
% umodel
% baseline_exposure
% baseline_noise
% baseline sharpness'
% linear_response_limit

unique_id = round(rand(1,16)*255);
CCM1 = M.CCM1';
CCM1 = CCM1(:);
CCM2 = M.CCM2';
CCM2 = CCM2(:);

ifd = {...
  struct('tag',254,'description','NewSubfileType','type',4,'count',1,'values',[1]),...
  struct('tag',256,'description','ImageWidth','type',4,'count',1,'values',M.thumb_width),...
  struct('tag',257,'description','ImageLength','type',4,'count',1,'values',M.thumb_height),...
  struct('tag',258,'description','BitsPerSample','type',3,'count',3,'values',[8   8   8]),...
  struct('tag',259,'description','Compression','type',3,'count',1,'values',[1]),...
  struct('tag',262,'description','PhotometricInterpretation','type',3,'count',1,'values',[2]),...
  struct('tag',271,'description','Make','type',2,'count',length(M.make)+1,'values',[M.make 0]),...
  struct('tag',272,'description','Model','type',2,'count', length(M.model)+1,'values',[M.model 0]),...
  struct('tag',273,'description','StripOffsets','type',4,'count',1,'values',M.thumbnail_data_offset),...
  struct('tag',274,'description','Orientation','type',3,'count',1,'values',[1]),...
  struct('tag',277,'description','SamplesPerPixel','type',3,'count',1,'values',[3]),...
  struct('tag',278,'description','RowsPerStrip','type',4,'count',1,'values',M.thumb_height),...
  struct('tag',279,'description','StripByteCounts','type',4,'count',1,'values',3*M.thumb_width*M.thumb_height),...
  struct('tag',284,'description','PlanarConfiguration','type',3,'count',1,'values',[1]),...
  struct('tag',305,'description','Software','type',2,'count',length(M.version)+1,'values',[M.version 0]),...
  struct('tag',306,'description','DateTime','type',2,'count',length(M.date_time)+1,'values',[M.date_time 0]),...
  struct('tag',330,'description','SubIFDs','type',4,'count',length(M.sub_ifd_offsets),'values',M.sub_ifd_offsets),...
  struct('tag',33432,'description','Copyright','type',2,'count',length(M.copy)+1,'values',[M.copy 0]),...
  struct('tag',34665,'description','Exif','type',4,'count',1,'values',M.exif_ifd_offset),...
  struct('tag',50706,'description','DNGVersion','type',1,'count',4,'values',[1   3   0   0]),...
  struct('tag',50707,'description','DNGBackwardVersion','type',1,'count',4,'values',[1   3   0   0]),...
  struct('tag',50708,'description','UniqueCameraModel','type',2,'count',length(M.umodel)+1,'values',[M.umodel 0]),...
  struct('tag',50721,'description','ColorMatrix1','type',10,'count',9,'values',CCM1),...
  struct('tag',50722,'description','ColorMatrix2','type',10,'count',9,'values',CCM2),...
  struct('tag',50727,'description','AnalogBalance','type',5,'count',3,'values',M.balance),...
  struct('tag',50728,'description','AsShotNeutral','type',5,'count',3,'values',M.shot_neutral),...
  struct('tag',50730,'description','BaselineExposure','type',10,'count',1,'values',[M.baseline_exposure]),...
  struct('tag',50731,'description','BaselineNoise','type',5,'count',1,'values',[M.baseline_noise]),...
  struct('tag',50732,'description','BaselineSharpness','type',5,'count',1,'values',[M.baseline_sharpness]),...
  struct('tag',50734,'description','LinearResponseLimit','type',5,'count',1,'values',[M.linear_response_limit]),...
  struct('tag',50736,'description','LensInfo','type',5,'count',4,'values',[M.focal_length   M.focal_length   M.aperture   M.aperture]),...
  struct('tag',50739,'description','ShadowScale','type',5,'count',1,'values',[1]),...
  struct('tag',50778,'description','CalibrationIlluminant1','type',3,'count',1,'values',[17]),...
  struct('tag',50779,'description','CalibrationIlluminant2','type',3,'count',1,'values',[21]),...
  struct('tag',50781,'description','RawDataUniqueID','type',1,'count',16,'values',unique_id),...
  struct('tag',50827,'description','OriginalRawFileName','type',1, 'count',length(M.orig_name)+1,'values',[M.orig_name 0])};
